<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.9.2 on darwin)" generated="20210324 23:08:13.083" rpa="false">
<suite id="s1" name="Example" source="/Users/nattatorn.yuch/workspace/robot-framework/example.robot">
<kw name="Create Session" library="req" type="setup">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>typicode</arg>
<arg>https://jsonplaceholder.typicode.com</arg>
</arguments>
<msg timestamp="20210324 23:08:13.598" level="INFO">Creating Session using : alias=typicode, url=https://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210324 23:08:13.598" endtime="20210324 23:08:13.598"></status>
</kw>
<test id="s1-t1" name="requests: Should have a name and belong to a company with a slogan">
<kw name="Get Request" library="req">
<doc>*DEPRECATED* Please use `GET On Session` instead.</doc>
<arguments>
<arg>typicode</arg>
<arg>/users/1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210324 23:08:13.599" level="WARN">Keyword 'req.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20210324 23:08:13.855" level="INFO">GET Request : url=https://jsonplaceholder.typicode.com/users/1 
 path_url=/users/1 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210324 23:08:13.856" level="INFO">GET Response : url=https://jsonplaceholder.typicode.com/users/1 
 status=200, reason=OK 
 headers={'Date': 'Wed, 24 Mar 2021 16:08:13 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d781f443246259cc4eace2596af0c4a401616602093; expires=Fri, 23-Apr-21 16:08:13 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1613702495', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"1fd-+2Y3G3w049iSZtw5t1mzSnunngE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '22697', 'cf-request-id': '090697712d0000d95a048d4000000001', 'Expect-CT': 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=ifaClvuJPF5vSmWHktdRa2vtPWK4fdvit7POVSHI0c8CF5kaKgMYzOm%2BQkYvh3cUht22IJKAj3%2BgfpjrTaZZ3Bd9LWETLVdSc49wdLgI4LE8Yfq42v0YZkoC13pi"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '6351282eaa1ad95a-HKG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3-27=":443"; ma=86400, h3-28=":443"; ma=86400, h3-29=":443"; ma=86400'} 
 body={
  "id": 1,
  "name": "Leanne Graham",
  "username": "Bret",
  "email": "Sincere@april.biz",
  "address": {
    "street": "Kulas Light",
    "suite": "Apt. 556",
    "city": "Gwenborough",
    "zipcode": "92998-3874",
    "geo": {
      "lat": "-37.3159",
      "lng": "81.1496"
    }
  },
  "phone": "1-770-736-8031 x56442",
  "website": "hildegard.org",
  "company": {
    "name": "Romaguera-Crona",
    "catchPhrase": "Multi-layered client-server neural-net",
    "bs": "harness real-time e-markets"
  }
} 
 </msg>
<msg timestamp="20210324 23:08:13.856" level="INFO">/usr/local/lib/python3.9/site-packages/urllib3/connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'jsonplaceholder.typicode.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20210324 23:08:13.856" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210324 23:08:13.599" endtime="20210324 23:08:13.856"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210324 23:08:13.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210324 23:08:13.856" endtime="20210324 23:08:13.857"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>name</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20210324 23:08:13.858" level="INFO">${name} = Leanne Graham</msg>
<status status="PASS" starttime="20210324 23:08:13.857" endtime="20210324 23:08:13.858"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${name}</arg>
<arg>Leanne Graham</arg>
</arguments>
<status status="PASS" starttime="20210324 23:08:13.858" endtime="20210324 23:08:13.858"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>company</arg>
</arguments>
<assign>
<var>${co}</var>
</assign>
<msg timestamp="20210324 23:08:13.859" level="INFO">${co} = {'name': 'Romaguera-Crona', 'catchPhrase': 'Multi-layered client-server neural-net', 'bs': 'harness real-time e-markets'}</msg>
<status status="PASS" starttime="20210324 23:08:13.858" endtime="20210324 23:08:13.859"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${co}</arg>
<arg>catchPhrase</arg>
</arguments>
<assign>
<var>${co_slogan}</var>
</assign>
<msg timestamp="20210324 23:08:13.859" level="INFO">${co_slogan} = Multi-layered client-server neural-net</msg>
<status status="PASS" starttime="20210324 23:08:13.859" endtime="20210324 23:08:13.859"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${co_slogan}</arg>
<arg>Multi-layered client-server neural-net</arg>
</arguments>
<status status="PASS" starttime="20210324 23:08:13.860" endtime="20210324 23:08:13.860"></status>
</kw>
<kw name="Dumps" library="json">
<doc>Serialize ``obj`` to a JSON formatted ``str``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>indent=${4}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20210324 23:08:13.861" level="INFO">${json} = {
    "id": 1,
    "name": "Leanne Graham",
    "username": "Bret",
    "email": "Sincere@april.biz",
    "address": {
        "street": "Kulas Light",
        "suite": "Apt. 556",
        "city": "Gw...</msg>
<status status="PASS" starttime="20210324 23:08:13.860" endtime="20210324 23:08:13.861"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json}</arg>
</arguments>
<status status="PASS" starttime="20210324 23:08:13.861" endtime="20210324 23:08:13.861"></status>
</kw>
<status status="PASS" starttime="20210324 23:08:13.598" endtime="20210324 23:08:13.861" critical="yes"></status>
</test>
<test id="s1-t2" name="RESTinstance: Should have a name and belong to a company with a slogan">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/users/1</arg>
</arguments>
<status status="PASS" starttime="20210324 23:08:13.862" endtime="20210324 23:08:14.178"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20210324 23:08:14.178" endtime="20210324 23:08:14.179"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.name</arg>
<arg>Leanne Graham</arg>
</arguments>
<status status="PASS" starttime="20210324 23:08:14.179" endtime="20210324 23:08:14.209"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$..catchPhrase</arg>
<arg>Multi-layered client-server neural-net</arg>
</arguments>
<status status="PASS" starttime="20210324 23:08:14.210" endtime="20210324 23:08:14.228"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>$</arg>
</arguments>
<msg timestamp="20210324 23:08:14.229" level="INFO">
{
    "id": 1,
    "name": "Leanne Graham",
    "username": "Bret",
    "email": "Sincere@april.biz",
    "address": {
        "street": "Kulas Light",
        "suite": "Apt. 556",
        "city": "Gwenborough",
        "zipcode": "92998-3874",
        "geo": {
            "lat": "-37.3159",
            "lng": "81.1496"
        }
    },
    "phone": "1-770-736-8031 x56442",
    "website": "hildegard.org",
    "company": {
        "name": "Romaguera-Crona",
        "catchPhrase": "Multi-layered client-server neural-net",
        "bs": "harness real-time e-markets"
    }
}</msg>
<status status="PASS" starttime="20210324 23:08:14.228" endtime="20210324 23:08:14.233"></status>
</kw>
<status status="PASS" starttime="20210324 23:08:13.862" endtime="20210324 23:08:14.233" critical="yes"></status>
</test>
<kw name="Delete All Sessions" library="req" type="teardown">
<doc>Removes all the session objects</doc>
<msg timestamp="20210324 23:08:14.234" level="INFO">Delete All Sessions</msg>
<status status="PASS" starttime="20210324 23:08:14.234" endtime="20210324 23:08:14.236"></status>
</kw>
<status status="PASS" starttime="20210324 23:08:13.085" endtime="20210324 23:08:14.236"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="Example">Example</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20210324 23:08:13.599" level="WARN">Keyword 'req.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
</errors>
</robot>
